blueprint:
  name: View Assist - Play Music with Music Assistant
  description: Use various methods to play individual songs, add to queue, play artist
    and playlists from your Music Assistant server (View Assist Play Music with Music
    Assistant v 1.0.4)
  domain: automation
  input:
    ma_instance:
      name: Music Assistant Instance
      description: Select the Music Assistant instance
      selector:
        config_entry:
          integration: music_assistant
    view_path:
      name: Dashboard Info view
      description: The View Assist dashboard view to use for displaying music information
        (example /view-assist/music)
      default: /view-assist/music
alias: View Assist - Play Music with Music Assistant
description: Play music using music assistant
trigger:
- platform: conversation
  command:
  - play the artist {artist}
  - play some {artist} [music]
  - play [some] [music | songs] by {artist}
  id: playartist
- platform: conversation
  command:
  - start [the] {playlist} playlist
  id: playlist
- platform: conversation
  command:
  - play {song} by {artist}
  id: playsong
- platform: conversation
  command:
  - (queue | cue | Q) {song} by {artist}
  id: cuesong
conditions: []
actions:
- action: view_assist.get_target_satellite
  data:
    device_id: "{{ trigger.device_id }}"
  response_variable: target_satellite
  action: view_assist.get_target_satellite
- variables:
    target_satellite_device: "{{ target_satellite.target_satellite[0] }}"
    target_musicplayer_device: '{{ state_attr(target_satellite_device, ''musicplayer_device'')}}'
    target_mediaplayer_device: '{{ state_attr(target_satellite_device, ''mediaplayer_device'')}}'
    target_satellite_device_type: '{{ state_attr(target_satellite_device, ''type'')}}'
    target_use_announce: '{{ state_attr(target_satellite_device, ''use_announce'') }}'
    view_path: !input view_path
    ma_instance: !input ma_instance     
- choose:
  - conditions:
    - condition: trigger
      id:
      - playartist
    sequence:
    - action: music_assistant.search
      data:
        limit: 1
        config_entry_id: '{{ ma_instance }}'
        media_type:
        - artist
        name: '{{ trigger.slots.artist  }}'
      response_variable: found_artist
    - alias: Did we find an artist?
      if:
      - condition: template
        value_template: '{{found_artist[''artists''] | count>0}}'
        alias: We found an artist!
      then:
      - action: view_assist.set_state
        target:
          entity_id: '{{ target_satellite_device }}'
        data:
          mode: music
          title: ''
      - action: view_assist.navigate
        data:
          device: "{{ target_satellite_device }}"
          path: '{{ view_path }}'
      - target:
          entity_id: '{{ target_musicplayer_device }}'
        data:
          media_type: artist
          enqueue: replace
          media_id: '{{ found_artist.artists.0.name }}'
        action: music_assistant.play_media
      - if:
        - condition: template
          value_template: '{{ target_use_announce is not false }}'
        then:
        - set_conversation_response: Playing {{ found_artist.artists.0.name }} music
        else:
        - set_conversation_response: ''
      else:
      - if:
        - condition: template
          value_template: '{{ target_use_announce is not false }}'
        then:
        - set_conversation_response: I was unable to find any music for {{ trigger.slots.artist
            }}
        else:
        - set_conversation_response: ''
  - conditions:
    - condition: trigger
      id:
      - playlist
    sequence:
    - data:
        limit: 1
        config_entry_id: '{{ ma_instance }}'
        media_type:
        - playlist
        name: '{{ trigger.slots.playlist }}'
      response_variable: found_playlist
      action: music_assistant.search
    - alias: Did we find a playlist?
      if:
      - condition: template
        value_template: '{{found_playlist[''playlists''] | count>0}}'
        alias: We found a playlist!
      then:
      - action: view_assist.set_state
        target:
          entity_id: '{{ target_satellite_device }}'
        data:
          mode: music
          title: ''      
      - action: view_assist.navigate
        data:
          device: "{{ target_satellite_device }}"
          path: '{{ view_path }}'
      - target:
          entity_id: '{{ target_musicplayer_device }}'
        data:
          media_type: playlist
          enqueue: replace
          media_id: '{{ trigger.slots.playlist }}'
        action: music_assistant.play_media
      - if:
        - condition: template
          value_template: '{{ target_use_announce is not false }}'
        then:
        - set_conversation_response: Playing the {{ found_playlist.playlists.0.name
            }} playlist
        else:
        - set_conversation_response: ''
      else:
      - if:
        - condition: template
          value_template: '{{ target_use_announce is not false }}'
        then:
        - set_conversation_response: Sorry, no playlist named {{ trigger.slots.artist  }}
            could be found
        else:
        - set_conversation_response: ''
  - conditions:
    - condition: trigger
      id:
      - playsong
      - cuesong
    sequence:
    - data:
        limit: 1
        config_entry_id: '{{ ma_instance }}'
        media_type:
        - track
        name: '{{ trigger.slots.song  }}'
        artist: '{{ trigger.slots.artist  }}'
      response_variable: found_track
      action: music_assistant.search
    - alias: Did we find a track?
      if:
      - condition: template
        value_template: '{{found_track[''tracks''] | count>0}}'
        alias: We found a track!
      then:
      - action: view_assist.set_state
        target:
          entity_id: '{{ target_satellite_device }}'
        data:
          mode: music
          title: ''
      - action: view_assist.navigate
        data:
          device: "{{ target_satellite_device }}"
          path: '{{ view_path }}'
      - alias: Set enqueue_type, media_type and response_first_word depending on cuesong
          or playsong trigger
        choose:
        - conditions:
          - condition: trigger
            id:
            - cuesong
          sequence:
          - target:
              entity_id: '{{ target_musicplayer_device }}'
            data:
              media_type: track
              enqueue: next
              media_id: '{{ found_track.tracks.0.name }}'
              artist: '{{ trigger.slots.artist  }}'
            action: music_assistant.play_media
          - if:
            - condition: template
              value_template: '{{ target_use_announce is not false }}'
            then:
            - set_conversation_response: Queueing {{found_track.tracks.0.name}}
            else:
            - set_conversation_response: ''
        - conditions:
          - condition: trigger
            id:
            - playsong
          sequence:
          - target:
              entity_id: '{{ target_musicplayer_device }}'
            data:
              media_type: track
              enqueue: play
              media_id: '{{ found_track.tracks.0.name }}'
              artist: '{{ trigger.slots.artist  }}'
            action: music_assistant.play_media
          - if:
            - condition: template
              value_template: '{{ target_use_announce is not false }}'
            then:
            - set_conversation_response: Playing {{ found_track.tracks.0.name }} by
                {{ trigger.slots.artist }}
            else:
            - set_conversation_response: ''
      else:
      - if:
        - condition: template
          value_template: '{{ target_use_announce is not false }}'
        then:
        - set_conversation_response: Sorry {{ trigger.slots.song }} by {{ trigger.slots.artist
            }} was not found
        else:
        - set_conversation_response: ''