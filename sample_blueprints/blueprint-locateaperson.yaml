blueprint:
  name: View Assist - Locate a Person
  description: Ask Assist to locate a person (View Assist locateaperson v 1.0.0)
  domain: automation
  input:
    command_prompt:
      name: Command Text
      description: The phrase you want to use to trigger the automation
      default: (locate|map|where is|where's) [my] {person}
    view_locate:
      name: Locate View
      description: The View Assist dashboard view used for the locate view
      default: /view-assist/locate
    view_info:
      name: Info View
      description: The View Assist dashboard view used for the info display
      default: /view-assist/info
    defined_names:
      name: Defined Names
      description: This is the phonetic name followed by the Person's name as configured
        in the Home Assistant settings
      default: '{"john":"jon","simon":"simon"}'
    map_mode:
      name: Map Mode Theme
      description: This will change the map mode theme
      default: dark
      selector:
        select:
          mode: dropdown
          options:
          - dark
          - light
          custom_value: false
          multiple: false
          sort: false
alias: View Assist - Locate a Person
description: Ask Assist to locate a person
trigger:
- platform: conversation
  command:
  - !input command_prompt
condition: []
actions:
- data:
    device_id: "{{ trigger.device_id }}"
  response_variable: target_satellite
  action: view_assist.get_target_satellite
- variables:
    target_satellite_device: "{{ target_satellite.target_satellite[0] }}"
    target_musicplayer_device: '{{ state_attr(target_satellite_device, ''musicplayer_device'')}}'
    target_mediaplayer_device: '{{ state_attr(target_satellite_device, ''mediaplayer_device'')}}'
    target_satellite_device_type: '{{ state_attr(target_satellite_device, ''type'')}}'
    target_use_announce: '{{ state_attr(target_satellite_device, ''use_announce'') }}'
    view_locate: !input view_locate
    view_info: !input view_info
    map_mode: !input map_mode
    input_defined_names: !input defined_names
    persons_name: '{{ input_defined_names | from_json}}'    
- if:
  - condition: template
    value_template: '{% if trigger.slots.person in persons_name %}true{%endif%}'
  then:
  - variables:
      person_source: '{{ ''person.''+persons_name[trigger.slots.person] }}'
      tracker_source: '{{ state_attr(''person.''+persons_name[trigger.slots.person],
        ''source'') }}'
      geocoded_source: '{% set geocoded = ''sensor.'' + tracker_source.split(''.'',
        1)[1] + ''_geocoded_location''%} {{ geocoded }}'
      location_source: "{% if states(person_source) != 'not_home' %}\n  {{ states(person_source)|capitalize
        }}\n{% elif not states(geocoded_source) in ['unknown'] %}\n  {{ states(geocoded_source)
        }}\n{% else %}\n  {{ \"Unknown Location\" }}\n{% endif %}"
  - set_conversation_response: "{% if states(person_source) == 'not_home' %}\n  {{
      persons_name[trigger.slots.person] }} is away.\n{% else %}\n  {{ persons_name[trigger.slots.person]
      }} is at {{ states(person_source) }}\n{% endif %}"
  - action: view_assist.set_state
    target:
      entity_id: '{{ target_satellite_device }}'
    data:
      locate_data: '{{ {''person'': person_source, ''tracker'': tracker_source, ''geocoded'':
        geocoded_source, ''location_text'': location_source, ''map_mode'': map_mode
        } }}'      
  - if:
    - condition: template
      value_template: '{% if target_satellite_device_type != ''audio_only'' %}true{%
        else %}false{% endif %}'
    then:
  - action: view_assist.navigate
    data:
      device: "{{ target_satellite_device }}"
      path: '{{ view_locate }}'      
  else:
  - action: view_assist.set_state
    target:
      entity_id: '{{ target_satellite_device }}'
    data:
      title: ''
      message: '{{ trigger.slots.person |capitalize}} hasn''t been defined'
      message_font_size: 6vw      
  - set_conversation_response: '{{ trigger.slots.person }} hasn''t been defined'
  - action: view_assist.navigate
    data:
      device: "{{ target_satellite_device }}"
      path: '{{ view_info }}'  
mode: single
