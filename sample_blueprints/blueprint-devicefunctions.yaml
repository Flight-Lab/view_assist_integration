blueprint:
  name: View Assist - Device Functions
  description: Various device functions for the View Assist Satellites (View Assist
    devicefunctions v 1.2.3)
  domain: automation
  input:
    repeat_command:
      name: Repeat Command
      description: The phrase you want to use to trigger repeating last spoken response
      default: (what did you say  | [please] say that again [please] | [please] repeat
        that [please])
    mode_command:
      name: Mode Command
      description: The command to use to trigger the mode change automation
      default: (set mode [to] {mode} | turn on {mode} mode | set [to] {mode} mode)
    view_command:
      name: View Command
      description: The command to use to trigger the view change automation
      default: (set view [to] {view} | change [to] {view} view | set [to] {view} view)
    dnd_command:
      name: Do Not Disturb Command
      description: The command to use to trigger turning off DND mode
      default: (set do not disturb [mode] [to] off | turn off do not disturb [mode]
        | end do not disturb [mode] | cancel do not disturb [mode])
    set_volume:
      name: Set Volume Command
      description: The command to use to set volume level directly
      default: '[set | turn] [the] volume [to] {level}'
    adjust_volume:
      name: Adjust Volume Command
      description: The command to use to set volume level by step
      default: turn {up_down} [the] volume
    mute_volume:
      name: Mute Volume Command
      description: The command to use to mute audio
      default: mute [the] [volume]
    unmute_volume:
      name: Unmute Volume Command
      description: The command to use to unmute audio
      default: unmute [the] [volume]
    stop_music:
      name: Stop Music Command
      description: The command to use to stop music playback
      default: stop [the] music
    modes:
      name: Modes
      description: The available modes (do not include do not disturb)
      default: '[''normal'', ''night'', ''hold'', ''cycle'']'
    views:
      name: Views
      description: The available views as named on your dashboard
      default: '[''clock'', ''weather'', ''info'', ''infopic'']'
trigger:
- platform: conversation
  command: !input repeat_command
  id: repeat
- platform: conversation
  command: !input mode_command
  id: mode
- platform: conversation
  command: !input dnd_command
  id: dndoff
- platform: conversation
  command: !input view_command
  id: view
- platform: conversation
  command: !input set_volume
  id: set_volume
- platform: conversation
  command: !input adjust_volume
  id: adjust_volume
- platform: conversation
  command: !input mute_volume
  id: mute_volume
- platform: conversation
  command: !input unmute_volume
  id: unmute_volume
- platform: conversation
  command: !input stop_music
  id: stop_music
condition: []
action:
- data:
    device_id: "{{ trigger.device_id }}"
  response_variable: target_satellite
  action: view_assist.get_target_satellite
- variables:
    modes: !input modes
    views: !input views
    target_satellite_device: "{{ target_satellite.target_satellite[0] }}"
    target_mediaplayer_device: '{{ state_attr(target_satellite_device, ''mediaplayer_device'')}}'
    target_musicplayer_device: '{{ state_attr(target_satellite_device, ''musicplayer_device'')}}'
    target_satellite_device_type: '{{ state_attr(target_satellite_device, ''type'')}}'
    target_display_type: '{{ state_attr(target_satellite_device, ''display_type'')}}' 
- choose:
  - conditions:
    - condition: trigger
      id:
      - repeat
    sequence:
    - set_conversation_response: I said {{ state_attr(target_satellite_device, 'last_said')|
        replace("I said ", "")}}
  - conditions:
    - condition: trigger
      id:
      - dndoff
    sequence:
      - action: view_assist.set_state
        target:
          entity_id: '{{ target_satellite_device }}'
        data:
          do_not_disturb: false         
      - set_conversation_response: Do not disturb mode is now off
  - conditions:
    - condition: trigger
      id:
      - mode
    sequence:
    - if:
      - condition: template
        value_template: '{{ trigger.slots.mode|lower in modes or trigger.slots.mode|lower in [''do
          not disturb''] }}'
      then:
      - set_conversation_response: Setting mode to {{ trigger.slots.mode }}
        enabled: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ trigger.slots.mode|lower in modes }}'
          sequence:
          - if:
            - condition: template
              value_template: '{% if target_satellite_device_type == ''audio_only''
                %}true{% else %}false{% endif %}'
            then:
            - set_conversation_response: Sorry.  {{ trigger.slots.mode }} is not a
                valid mode for this device
            else:
            - action: view_assist.set_state
              target:
                entity_id: '{{ target_satellite_device }}'
              data:
                mode: '{{ trigger.slots.mode }}'
        - conditions:
          - condition: template
            value_template: '{{ trigger.slots.mode in [''do not disturb''] }}'
          sequence:
            - action: view_assist.set_state
              target:
                entity_id: '{{ target_satellite_device }}'
              data:
                do_not_disturb: true
      else:
      - set_conversation_response: Sorry.  {{ trigger.slots.mode }} is not a valid
          mode. Please try {{ modes }}.
  - conditions:
    - condition: trigger
      id:
      - view
    sequence:
    - if:
      - condition: template
        value_template: '{% if target_satellite_device_type != ''audio_only'' %}true{%
          else %}false{% endif %}'
      then:
      - set_conversation_response: Switching view to {{ trigger.slots.view }} view
        enabled: true
      - action: view_assist.navigate
        data:
          device: "{{ target_satellite_device }}"
          path: '{{ trigger.slots.view | lower }}'
      else:
      - set_conversation_response: 'Sorry.  {{ trigger.slots.view }} is not a valid view. '
  - conditions:
    - condition: trigger
      id:
      - set_volume
    sequence:
    - service: media_player.volume_set
      data:
        volume_level: "{% if trigger.id == \"set_volume\" %} \n  {% if trigger.slots.level.endswith('%')
          %}\n    {{ (trigger.slots.level |replace('%',' ') | int)/100 }}\n  {% else
          %}\n    {{ (trigger.slots.level | int)/10 }}\n  {% endif %}\n{% endif %}"
      target:
        entity_id: '{{ target_mediaplayer_device }}'
    - set_conversation_response: The volume was set to {{ trigger.slots.level }}
      enabled: true
  - conditions:
    - condition: trigger
      id:
      - adjust_volume
    sequence:
    - service: "{% if trigger.slots.up_down == \"down\" %} media_player.volume_down
        {% endif %} \n{% if trigger.slots.up_down == \"up\" %} media_player.volume_up
        {% endif %}\n"
      target:
        entity_id: '{{ target_mediaplayer_device }}'
    - set_conversation_response: The volume has been turned {{ trigger.slots.up_down
        }}
      enabled: true
  - conditions:
    - condition: trigger
      id:
      - mute_volume
    sequence:
    - service: media_player.volume_mute
      data:
        is_volume_muted: true
      target:
        entity_id: '{{ target_mediaplayer_device }}'
    - set_conversation_response: ""
  - conditions:
    - condition: trigger
      id:
      - unmute_volume
    sequence:
    - service: media_player.volume_mute
      data:
        is_volume_muted: false
      target:
        entity_id: '{{ target_mediaplayer_device }}'
    - set_conversation_response: Sound has been restored
  - conditions:
    - condition: trigger
      id:
      - stop_music
    sequence:
    - target:
        entity_id:
        - '{{ target_musicplayer_device }}'
      data: {}
      action: media_player.media_stop
    - action: view_assist.set_state
      target:
        entity_id: '{{ target_satellite_device }}'
      data:
        mode: normal               
    - set_conversation_response: Music stopped
