# View Assist - View Assist View Camera (v 1.0.0)
# Special thanks to Flab for their work on writing this blueprint
blueprint:
  name: View Assist - View Camera
  description: Ask View Assist to show your camera streams
  domain: automation
  input:
    command:
      name: Command Text
      description: The command to use to trigger the automation
      default: (Show | display) [the] {camera} (camera | cam | view | feed)
    response:
      name: Response Text
      description: The response to give when launching website
      default: Showing {{trigger.slots.camera}} camera
    cameras:
      name: Camera Dictionary Text
      description: The dictionary of camera names and their associated Home Assistant camera entities
      default: "{'front':'camera.front_camera','doorbell':'camera.mydoorbellcamera'}"
    view:
      name: Dashboard Camera view
      description:
        The View Assist dashboard view designed to show cameras (example
        /view-assist/camera)
      default: /view-assist/camera
    hold_mode:
      name: Hold Mode
      description: Set on to keep the page from automatically switching after timeout
      default: true
      selector:
        boolean: {}
trigger:
  - platform: conversation
    command: !input command
condition: []
action:
  - action: view_assist.get_target_satellite
    data:
      device_id: "{{ trigger.device_id }}"
    response_variable: target_satellite
  - variables:
      hold_mode: !input hold_mode
      response: !input response
      input_cameras: !input cameras
      cameras: "{{ input_cameras | from_json}}"
      target_satellite_device: "{{ target_satellite.target_satellite[0] }}"
      target_mediaplayer_device: "{{ state_attr(target_satellite_device, 'mediaplayer_device')}}"
      target_satellite_device_type: "{{ state_attr(target_satellite_device, 'type')}}"
  - if:
      - condition: template
        value_template: "{% if hold_mode %}true{%endif%}"
    then:
      - action: view_assist.set_state
        target:
          entity_id: "{{ target_satellite_device }}"              
        data:
          mode: hold
  - if:
      - condition: template
        value_template: "{% if trigger.slots.camera in cameras %}true{%endif%}"
    then:
      - action: view_assist.set_state
        target:
          entity_id: "{{ target_satellite_device }}"              
        data:    
          camera: "{{ cameras[trigger.slots.camera] }}"
  - action: view_assist.navigate
    data:
      device: "{{ target_satellite_device }}"
      path: "{{ view }}"           
  - set_conversation_response: "{{ response }}"
mode: single